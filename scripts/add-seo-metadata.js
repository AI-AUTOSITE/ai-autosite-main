const fs = require('fs')
const path = require('path')

// 44ÂÄã„ÅÆ„ÉÑ„Éº„É´„É™„Çπ„ÉàÔºàsitemap.ts„Çà„ÇäÔºâ
const tools = [
  'age-calculator',
  'ai-dev-dictionary',
  'ai-project-visualizer',
  'ai-prompt-generator',
  'ai-resume',
  'ai-summarizer',
  'base64',
  'blurtap',
  'bmi-calculator',
  'code-dependency-visualizer',
  'code-roaster',
  'color-palette',
  'competitive-analyzer',
  'countdown-timer',
  'debate-trainer',
  'favicon-generator',
  'gradient-generator',
  'hashtag-generator',
  'image-compress',
  'image-grid-maker',
  'image-splitter',
  'instagram-bio',
  'japanese-ocr',
  'json-csv',
  'json-format',
  'lorem-ipsum',
  'markdown-html',
  'password-generator',
  'pc-optimizer',
  'pdf-summarizer',
  'pdf-to-data',
  'pdf-tools',
  'percentage-calculator',
  'qr-code',
  'stack-recommender',
  'tech-stack-analyzer',
  'text-case',
  'text-counter',
  'token-compressor',
  'twitter-counter',
  'unit-converter',
  'uuid-generator',
  'whatsapp-link',
  'youtube-thumbnail',
]

const baseUrl = 'https://ai-autosite.com'
const toolsDir = path.join(process.cwd(), 'app', 'tools')

let successCount = 0
let skipCount = 0
let errorCount = 0

console.log('üöÄ Starting SEO metadata addition...\n')

tools.forEach((toolId) => {
  const pagePath = path.join(toolsDir, toolId, 'page.tsx')

  // „Éï„Ç°„Ç§„É´Â≠òÂú®„ÉÅ„Çß„ÉÉ„ÇØ
  if (!fs.existsSync(pagePath)) {
    console.log(`‚ö†Ô∏è  SKIP: ${toolId} (file not found)`)
    skipCount++
    return
  }

  try {
    let content = fs.readFileSync(pagePath, 'utf-8')

    // Êó¢„Å´robots/alternates„ÅåÂ≠òÂú®„Åô„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
    if (content.includes('robots:') && content.includes('alternates:')) {
      console.log(`‚úì SKIP: ${toolId} (already has SEO metadata)`)
      skipCount++
      return
    }

    // metadata„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„ÅÆÁµÇ„Çè„ÇäÔºàÊúÄÂæå„ÅÆÈñâ„ÅòÊã¨ÂºßÔºâ„ÇíË¶ã„Å§„Åë„Çã
    // export const metadata: Metadata = { ... } „ÅÆÊßãÈÄ†„ÇíÊÉ≥ÂÆö

    const metadataMatch = content.match(/export const metadata: Metadata = \{[\s\S]*?\n\}/)

    if (!metadataMatch) {
      console.log(`‚ùå ERROR: ${toolId} (metadata object not found)`)
      errorCount++
      return
    }

    const originalMetadata = metadataMatch[0]

    // Êó¢Â≠ò„ÅÆ„É°„Çø„Éá„Éº„Çø„Å´ robots „Å® alternates „ÇíËøΩÂä†
    const seoMetadata = `  robots: {
    index: true,
    follow: true
  },
  alternates: {
    canonical: '${baseUrl}/tools/${toolId}'
  }`

    // „É°„Çø„Éá„Éº„Çø„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„ÅÆÊúÄÂæå„ÅÆ } „ÅÆÂâç„Å´ÊåøÂÖ•
    const newMetadata = originalMetadata.replace(/(\n\})$/, `,\n${seoMetadata}\n}`)

    // „Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÁΩÆÊèõ
    const newContent = content.replace(originalMetadata, newMetadata)

    // „Éï„Ç°„Ç§„É´„Å´Êõ∏„ÅçËæº„Åø
    fs.writeFileSync(pagePath, newContent, 'utf-8')

    console.log(`‚úÖ SUCCESS: ${toolId}`)
    successCount++
  } catch (error) {
    console.log(`‚ùå ERROR: ${toolId} - ${error.message}`)
    errorCount++
  }
})

console.log('\n' + '='.repeat(50))
console.log('üìä Summary:')
console.log(`  ‚úÖ Success: ${successCount}`)
console.log(`  ‚ö†Ô∏è  Skipped: ${skipCount}`)
console.log(`  ‚ùå Errors: ${errorCount}`)
console.log(`  üìÅ Total: ${tools.length}`)
console.log('='.repeat(50))

if (successCount > 0) {
  console.log('\n‚ú® Metadata addition complete!')
  console.log('üí° Please review the changes and test your build.')
}

if (errorCount > 0) {
  console.log('\n‚ö†Ô∏è  Some files had errors. Please check them manually.')
}
